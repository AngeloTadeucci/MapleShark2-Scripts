using (ScriptAPI) {
    f = AddByte("Function");

    switch ((int)f) {
        case 0: // create listing
            DecodeMatchPartyRecruit();
        case 1: // cancel listing
            AddLong("PartyId");
        case 2: // load listings
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                b = AddBool("IsListed");
                if (b) {
                    DecodeMatchPartyRecruit();
                }
            }
        case 4: // error notice
            AddByte("Type");
            AddInt("code");
    }
}

function DecodeMatchPartyRecruit() {
    using (ScriptAPI) {
        StartNode("PartyListing");
        AddLong("PartyId");
        AddInt("SomeId"); // increments somewhat
        AddInt("Unknown");
        AddInt("Unknown");
        AddUnicodeString("PartyName");
        AddBool("IsPublic");
        AddInt("MemberCount");
        AddInt("MaxMembers");
        AddLong("LeaderAccountId");
        AddLong("LeaderCharacterId");
        AddUnicodeString("LeaderName");
        AddLong("CreationTime");
        EndNode(true);
    }
}
