using (ScriptAPI) {
    f = AddByte("function");

    switch ((int)f) {
        case 0:
            AddInt("Unknown");
            AddInt("Unknown");
            // ...
        case 1: // confirm hold cube
            AddInt("UserObjectId");
            DecodeCubeItemInfo();
        case 2:
            b = AddBool("Unknown");
            if (!b) {
                AddInt("PlotId");
                AddInt("Unknown");
                AddUnicodeString("HomeName");
                AddLong("PlotExpiration");
                AddLong("OwnerAccountId");
            } // GOTO:148
            // Client Send OP:0x37, FUNC:21
        case 4: // finish buying plot
            // none
        case 5: // forfeit plot
            b = AddBool("Unknown");
            if (!b) {
                AddInt("PlotId");
                AddInt("Unknown");
                AddBool("Unknown");
            } // GOTO:148
        case 7: // complete forfeit plot
            AddShort("MsgCode"); // if 117, Err=1755, else 1804
            AddBool("Unknown"); // if true, 12540, else 12468
            AddInt("PlotMapId");
            AddInt("PlotId");
        case 9: // Also 40, 41
            b = AddBool("Unknown");
            if (!b) {
                AddLong("OwnerAccountId");
            }
            // GOTO: 148
        case 10: // confirm place cube
            b = AddBool("UnknownB");
            AddInt("UserObjectId");
            if (b) { // This is sent first, item is removed from warehouse
                AddInt("UserObjectId");
            } else { // Then this is sent to place the block
                AddInt("UserObjectId");
                AddInt("Unknown"); // Amount?
                AddInt("Unknown");
                AddInt("CoordB");
                AddLong("Uid");
                DecodeCubeItemInfo();
                AddBool("UnknownB");
                AddFloat("Rotation");
                AddInt("Unknown");
                b = AddBool("UnknownB");
                if (b) {
                    AddUnicodeString("UnknownStr");
                    AddByte("Unknown");
                }
            }
        case 12: // Remove cube (clearing map)
            b = AddBool("UnknownB");
            AddInt("UserObjectId");
            if (b) {
                AddInt("Unknown");
            } else {
                AddInt("UserObjectId");
                AddFloat("CoordB"); // COERCE_FLOAT
                AddBool("Unknown"); // 0
            }
        case 14: // rotate
            b = AddBool("UnknownB");
            AddInt("UserObjectId");
            if (b) {
                AddInt("Unknown");
            } else {
                AddInt("UserObjectId");
                AddInt("CoordB");
                AddFloat("Rotation");
            }
        case 15: // replace cube (also used for loading save map)
            b = AddBool("UnknownB");
            AddInt("UserObjectId");
            if (b) {
                AddInt("Unknown");
            } else {
                AddInt("UserObjectId");
                AddFloat("CoordB"); // COERCE_FLOAT
                AddLong("Uid");
                DecodeCubeItemInfo();
                AddBool("UnknownB");
                AddFloat("Rotation");
                AddInt("Unknown");
            }
        case 17: // confirm liftup object
            b = AddBool("UnknownB");
            if (b) {
                // GOTO: 139
            } else {
                AddFloat("UserObjectId"); // COERCE_FLOAT
                AddInt("CoordB");
                AddInt("ItemId");
                AddInt("ServerTick"); // next spawn time
            }
        case 18: // swing liftup object
            b = AddBool("UnknownB");
            AddInt("UserObjectId");
            if (b) {
                // GOTO: 139
            }
        case 20: // load home
            AddInt("UserObjectId");
            AddInt("MapId"); // Private Residence (62000000)
            AddInt("PlotMapId");
            AddInt("PlotId");
            AddFloat("Unknown"); // COERCE_FLOAT
            AddUnicodeString("HouseName");
            AddLong("Plot Expiration");
            AddLong("LastUpdated");
            AddBool("UnknownB"); // 1
            // Send RequestSetCraftMode (On some conditions)
        case 21: // Set plot name
            b = AddBool("UnknownB");
            if (b) {
                AddInt("Unknown"); // LABEL_138
            } else {
                AddLong("OwnerAccountId");
                AddInt("PlotId");
                AddInt("Unknown");
                AddUnicodeString("HomeName");
            }
        case 22: // Buy/extend/forfeit plot
            AddInt("PlotId");
            AddInt("Unknown");
            AddByte("Unknown"); // 1
            AddLong("ExpirationTime");
        case 24: // set password
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            }
        case 25: // confirm thumbs up (can't vote anymore)
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddLong("VotingAccountId");
                AddLong("TimeNow");
            }
        case 26:
            // none
        case 27:
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                AddInt("Unknown");
                AddFloat("Unknown"); // COERCE_FLOAT
            }
        case 28: // Broadcast after vote
            AddInt("WeeklyArchitectScore");
            AddInt("TotalArchitectScore");
        case 29: // set home message
            b = AddBool("Unknown");
            if (b) { // includes LABEL 138, 139, 141
                AddInt("Unknown");
            } else {
                AddUnicodeString("Message");
            }
        case 32:
            // none
        case 33:
            // none
        case 34:
            AddInt("OutsideMapID");
        case 36:
            count = AddByte("count");
            AddInt("Unknown");
            for (i = 0; i < count; i++) {
                AddByte("Unknown");
                AddLong("Unknown");
            }
            // Client Send OP:0x37, FUNC:48
        case 37: // confirm increase area
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Area");
            }
        case 38: // confirm decrease area
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Area");
            }
        case 39: // design rank reward
            AddLong("AccountId");
            AddLong("Timestamp");
            AddLong("Interior Desgin Rank");
            AddLong("Interior Design Score");
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                AddInt("TitleRelated");
            }
        case 42: // set permission #1
            AddByte("PermissionType");
            AddByte("PermissionSetting");
        case 43: // set permission #2
            AddByte("PermissionType");
            AddByte("PermissionSetting");
        case 44: // confirm increase height
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Height");
            }
        case 45: // confirm decrease height
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Height");
            }
        case 46: // confirm save house
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddLong("SaveUid");
                AddInt("Slot");
                AddUnicodeString("SaveName"); // No Title
                AddLong("Timestamp");
            }
        case 50:
            AddLong("Unknown");
        case 51: // change background
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Index");
            }
        case 52: // change lighting
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Index");
            }
        case 53:
            AddLong("Unknown");
            AddLong("Unknown");
            AddLong("Unknown");
            AddLong("Unknown");
        case 54: // change camera
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Index");
            }
        case 55:
            AddShort("Unknown");
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                AddInt("Unknown");
                AddFloat("Unknown"); // COERCE_FLOAT
            }
        case 56:
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddLong("Unknown");
                AddLong("Unknown");
            }
        case 57:
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddLong("Unknown");
            }
        case 58:
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddLong("Unknown");
            }
        case 59:
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                AddLong("Unknown");
            }
        case 60:
            AddLong("Unknown");
            AddLong("Unknown");
        case 61:
            n = AddByte("Unknown");
            if (n == 100) {
                AddByte("Unknown");
            }
        case 62:
            b = AddBool("Unknown");
            if (b) {
                // GOTO: 148
            } else {
                AddByte("Unknown");
                AddByte("Unknown");
            }
        case 63:
            AddByte("Unknown");
            AddLong("Unknown");
            // DecodeUgcRelated2
        case 64:
            b = AddBool("Unknown");
            if (b) {
                // LABEL: 148
            } else {
                AddLong("SaveUid");
                AddInt("Slot");
                AddUnicodeString("SaveName");
                AddLong("Timestamp");
            }
        case 67:
            count = AddByte("count");
            AddInt("Unknown");
            for (i = 0; i < count; i++) {
                AddByte("Unknown");
                AddLong("Unknown");
            }
            b = AddBool("Unknown");
            // if !b
            // Client Send OP:0x37, FUNC:70
        case 69:
            AddLong("Unknown");
        case 71:
            n = AddInt("Unknown");
            if (n == 1 || n == 2) {
                // do something
            } else if (n == 3) {
                // do something
            } else if (n == 4) {
                // do something
            }
    }
}

function DecodeCubeItemInfo() {
    using (ScriptAPI) {
        StartNode("CubeItemInfo");
        AddInt("ItemId");
        AddLong("ItemUid");
        AddLong("Unknown");
        b = AddBool("IsUgc");
        if (b) {
            DecodeUgcData();
        }
        EndNode(false);
    }
}