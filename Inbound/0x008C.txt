// Guild
using (ScriptAPI) {
    f = AddByte("Function");
    switch ((int)f) {
        case 0:
            AddLong("GuildUid");
            AddUnicodeString("GuildName");
            AddUnicodeString("GuildIconUrl");
            AddByte("MaxMembers");
            AddUnicodeString("UnknownStr+22");
            AddUnicodeString("GuildMessage");
            AddLong("LeaderAccountId");
            AddLong("LeaderCharacterId");
            AddUnicodeString("GuildLeaderName");
            AddLong("CreationTime");
            AddByte("Unknown+52");
            AddInt("Unknown+53"); // 1000
            AddInt("Unknown+57");
            AddInt("Unknown+61");
            AddInt("Unknown+65");
            AddInt("Unknown+69");
            AddInt("Unknown+73");
            AddInt("Unknown+77");
            AddInt("Unknown+81");
            AddByte("Unknown+85"); // 1
            AddInt("GuildFocus"); // bit-flags
            AddInt("GuildExp");
            AddInt("GuildFunds");
            AddBool("Unknown+98");
            AddInt("Unknown+99");
            StartNode("Guild Members");
            count = AddByte("MemberCount+103");
            for (i = 0; i < count; i++) {
                DecodeGuildMember();
            }
            EndNode(false);

            StartNode("GuildRanks");
            count = AddByte("GuildRanksCount");
            for (i = 0; i < count; i++) {
                DecodeGuildRank();
            }
            EndNode(false);
            StartNode("GuildSkills");
            count = AddByte("GuildSkillsCount");
            for (i = 0; i < count; i++) {
                StartNode("GuildSkill " + i);
                AddInt("SkillId");
                AddInt("SkillLevel");
                AddLong("ExpireTime");
                EndNode(false);
            }
            EndNode(false);
            StartNode("GuildEvents");
            count = AddByte("GuildEventsCount");
            for (i = 0; i < count; i++) {
                StartNode("GuildEvent " + i);
                AddInt("Index");
                AddInt("Unknown"); // 0
                EndNode(false);
            }
            EndNode(false);
            StartNode("GuildPosters");
            AddInt("Unknown+131");
            AddInt("Unknown+135");
            count = AddInt("Count");
            for (i = 0; i < count; i++) {
                StartNode("Poster " + i);
                AddInt("Index");
                AddUnicodeString("PosterUrl");
                AddLong("OwnerCharacterId");
                AddUnicodeString("OwnerName");
                EndNode(false);
            }
            EndNode(false);
            StartNode("GuildNpcs");
            count = AddByte("Count");
            for (i = 0; i < count; i++) {
                StartNode("GuildNpc " + i);
                AddInt("ServiceType");
                AddInt("Level");
                EndNode(false);
            }
            EndNode(false);
            StartNode("GuildNpcShopProducts");
            if (AddBool("Flag")) {
                count = AddShort("Count");
                for (i = 0; i < count; i++) {
                    AddBool("Unknown");
                    AddShort("Unknown");
                    AddLong("Unknown");
                    count2 = AddShort("Unknown");
                    for (j = 0; j < count2; j++) {
                        if (AddBool("Flag")) {
                            AddInt("Unknown");
                            AddByte("Unknown");
                            AddInt("Unknown");
                            AddInt("Unknown");
                        }
                    }
                }
            }
            EndNode(false);
            StartNode("GuildBank");
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                DecodeGuildBankEntry();
            }
            EndNode(false);
            AddInt("Unknown+149");
            AddUnicodeString("UnknownStr+153");
            AddLong("Unknown+155");
            AddLong("Unknown+163");
            for (i = 0; i < 7; i ++) {
                AddInt("Unknown");
            }
        case 1: // guild created
            e = AddByte("Notice");
            if (e == 0) {
                AddUnicodeString("GuildName");
            }
        case 2: // disband guild
            e = AddByte("Notice"); // 0 = success
        case 3: // guild invite
            AddUnicodeString("Player Name");
        case 4:
            DecodeGuildInviteInfo();
        case 5: // accepeted to guild
            DecodeGuildInviteInfo();
            AddBool("Notice");
        case 6: // invite response msg
            AddUnicodeString("PlayerName");
            b = AddByte("Unknown"); // T if accept
            AddByte("Notice"); // 0=accepted, 1=declined, 2, 3
            if (b != 1) {
                // Dsplay Notice
            }
        case 7: // leave guild
            // notice
        case 8:
            AddUnicodeString("UnknownStr");
        case 9:
            AddUnicodeString("UnknownStr");
        case 10: // change player rank
            AddUnicodeString("PlayerName");
            AddByte("Rank");
        case 11:
            AddUnicodeString("UnknownStr");
        case 12:
            AddUnicodeString("UnknownStr");
            AddUnicodeString("UnknownStr");
        case 14:
            AddUnicodeString("PlayerName");
            AddInt("Unknown"); // 3382??
        case 15: // confirm check in
            // none
        case 18:
            AddUnicodeString("AcceptorName"); // maybe leader
            AddUnicodeString("PlayerName");
            AddByte("Unknown");
            DecodeGuildMember();
        case 19:
            AddUnicodeString("UnknownStr");
        case 20: // kicked player
            AddUnicodeString("LeaderName");
            AddUnicodeString("PlayerName");
        case 21: // updated player rank
            AddUnicodeString("LeaderName");
            AddUnicodeString("PlayerName");
            AddByte("Rank");
        case 22: // update motto
            AddUnicodeString("PlayerName");
            AddUnicodeString("PlayerMotto");
        case 23: // guild member logged in
            AddUnicodeString("PlayerName");
        case 24: // logged off
            AddUnicodeString("PlayerName");
            AddLong("LogOFfTime?");
        case 25: // become leader
            AddUnicodeString("OldLeaderName");
            AddUnicodeString("NewLeaderName");
        case 26: // setting notice
            AddUnicodeString("LeaderName");
            AddByte("Notice");
            AddUnicodeString("NoticeMessage");
        case 27:
            AddUnicodeString("UnknownStr");
        case 28:
            AddUnicodeString("UnknownStr");
            AddInt("Unknown");
        case 29: // update rank
            b = AddBool("Unknown");
            AddInt("Unknown");
            if (!b) {
                AddUnicodeString("LeaderName");
            } else {
                AddInt("Unknown");
                count = AddInt("count");
                for (i = 0; i < count; i++) {
                    AddUnicodeString("UnknownStr");
                }
            }
            AddByte("Unknown");
            DecodeGuildRank();
        case 30: // set guild focus msg (???)
            AddUnicodeString("LEaderName");
            // guild focus packet
            AddBool("Unkown");
            AddInt("FocusFlags");
        case 31:
            AddUnicodeString("UnknownStr");
            // Some condition
            // AddInt("Unknown");
        case 32: // update member
            AddUnicodeString("PlayerName");
            DecodeGuildMemberPlayer();
        case 33:
            AddUnicodeString("UnknownStr");
        case 34:
            AddUnicodeString("UnknownStr");
        case 35:
            AddUnicodeString("UnknownStr");
            AddInt("Unknown");
            AddInt("Unknown");
            AddShort("Unknown");
        case 36: // sent after updating contribution?
            AddUnicodeString("Name");
            AddLong("TimeNow");
        case 37:
            AddUnicodeString("UnknownStr");
            AddInt("Unknown");
            AddInt("Unknown");
        case 38: // CUIService Related
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                AddUnicodeString("UnknownStr");
                AddInt("Unknown");
                AddInt("Unknown");
            }
        case 39:
            AddByte("Unknown");
        case 40:
            AddByte("Unknown");
        case 41:
            AddInt("Unknown");
            AddInt("Unknown");
            AddInt("Unknown");
        case 42:
            AddByte("Unknown");
            AddUnicodeString("UnknownStr");
        case 43:
            AddUnicodeString("UnknownStr");
        case 44:
            AddUnicodeString("UnknownStr");
        case 45: // receive application
            DecodeGuildJoinRequest();
        case 46: // application removed
            AddLong("ApplicationUid");
        case 47: // accept guild invite
            AddUnicodeString("AcceptorName");
            AddUnicodeString("AcceptedName");
            AddByte("1 when accepted");
            AddLong("ApplicationId");
        case 48: // your application rejected
            AddUnicodeString("GuildName");
            AddLong("ApplicationId");
            AddByte("Unknown"); // 0
        case 49: // update guild exp
            AddInt("GuildExp"); // 3307547 (GuildExp?)
        case 50: // update guild funds
            AddInt("GuildFunds");
        case 51: // update contribution
            AddUnicodeString("Name");
            AddInt("ContributionGained");
            AddInt("WeeklyContribution");
            AddInt("TotalContribution");
        case 52: // Use skill
            AddUnicodeString("UsePlayerName");
            sub_508870();
        case 53: // skill upgraded
            AddUnicodeString("UpgraderName");
            sub_508870();
        case 54: // started arcade msg
            AddUnicodeString("PlayerName"); // who started it
            AddInt("GameIndex");
            AddInt("timestamp (INT)");
        case 55:
            AddUnicodeString("UnknownStr");
            AddInt("Unknown");
            AddInt("Unknown");
        case 56:
            AddLong("Unknown");
            AddUnicodeString("UnknownStr");
            AddInt("Unknown");
            AddUnicodeString("UnknownStr");
        case 57:
            AddUnicodeString("UnknownStr");
            // CGuildNpc related
            AddInt("Unknown");
            AddInt("Unknown");
        case 59:
            f_59_60_115();
        case 60:
            f_59_60_115();
        case 61: // make leader response
            AddUnicodeString("NewLeaderName");
        case 62: // set guild notice
            AddBool("Unknown"); // 1
            AddUnicodeString("GuildNotice");
        case 63:
            AddUnicodeString("UnknownStr");
        case 64:
            AddInt("Unknown");
        case 65: // update rank response
            AddByte("Unknown");
            DecodeGuildRank();
        case 66: // set guild focus
            AddBool("Unkown");
            AddInt("FocusFlags");
        case 69: // send mail response
            // none
        case 72:
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                b = AddBool("flag");
                if (b) {
                    DecodeGuildPVPHistoryData();
                }
            }
        case 73:
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                b = AddBool("flag");
                if (b) {
                    DecodeGuildPVPSeasonHistoryData();
                }
            }
        case 74:
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                AddUnicodeString("UnknownStr");
                AddUnicodeString("UnknownStr");
                AddLong("Unknown");
            }
        case 75: // add guild details above player
            AddUnicodeString("PlayerName");
            AddUnicodeString("GuildName");
        case 76: // left/kicked from guild
            AddUnicodeString("Name");
        case 77: // create guild name taken
            AddByte("Unknown"); // 1
            AddByte("Unknown"); // 11
            AddInt("Unknown");
        case 78:
            AddInt("Unknown");
            AddLong("Unknown");
            AddLong("Unknown");
            AddUnicodeString("UnknownStr");
        case 80: // apply guild
            AddLong("ApplicationId");
            AddUnicodeString("GuildName");
        case 81: // cancel application
            AddLong("ApplicationId");
            AddUnicodeString("GuildName");
        case 82: // response application
            AddLong("ApplicationId");
            AddUnicodeString("PlayerName");
            AddBool("IsAccepted"); // 0
        case 83: // updated players rank?
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                b = AddBool("Unknown");
                if (b) {
                     DecodeGuildJoinRequest();
                }
            }
        case 84: // load open guild search ui (not in guild)
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                b = AddBool("Requested");
                if (b) {
                    DecodeGuildJoinRequestForChar();
                }
            }
        case 85: // Search for guild
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                b = AddBool("Unknown");
                if (b) {
                    DecodeSearchGuildJoin();
                }
            }
        case 88: // active guild buff
            AddInt("GuildBuffId");
        case 89: // activate guild personal buff
            AddInt("GuildBuffId");
        case 95: // acquired guild funds/exp (msg)
            AddInt("AcquiredExp");
            AddInt("AcquiredFunds");
        case 96: // start arcade
            AddInt("MinigameIndex");
        case 104:
            AddInt("Unknown");
        case 106:
            b = AddBool("Unknown");
            if (!b) {
                AddUnicodeString("UnknownStr");
            }
        case 107: // update gift storage
		    // Also causes 0x20 to be sent
            DecodeGuildBankEntry();
        case 109: // gift log
            count = AddInt("count");
            for (i = 0; i < count; i++) {
			    // Gift Sender
                AddLong("AccountId");
                AddLong("CharacterId");
                AddUnicodeString("Name");
                // Gift Receiver
                AddLong("AccountId");
                AddLong("CharacterId");
                AddUnicodeString("Name");
                DecodeGuildBankEntry();
                AddLong("Timestamp");
            }
        case 110: // donate 
            AddInt("DonationAmount");
            AddLong("DonationTime");
        case 114:
            // none
        case 115:
            f_59_60_115();
        case 116:
            AddInt("Unknown");
        case 119:
            sub_AE52B0();
            sub_AE52B0();
        case 120:
            AddBool("Unknown");
            AddInt("Unknown");
    }
}

function f_59_60_115() {
    AddBool("Unknown");
    AddBool("Unknown");
}

function sub_508870() {
    AddInt("SkillLevel");
    AddInt("SkillId (index)");
    AddLong("ExpiryTime?");
}

function sub_AE52B0() {
    AddLong("Unknown");
    AddUnicodeString("UnknownStr");
    AddUnicodeString("UnknownStr");
    AddInt("Unknown");
}

function DecodeGuildMember() {
    StartNode("GuildMember");
    type = AddByte("Type (const)"); // always 3...
    AddByte("GuildRank");
    AddLong("GuildMemberUid");

    if (type == 3) {
        DecodeGuildMemberPlayer();

        AddUnicodeString("GuildMessage");
        AddLong("JoinDate");
        AddLong("LastLogoffTime");
        AddLong("LastLoginTime");
        AddInt("Unknown+213");
        AddInt("Unknown+217");
        AddInt("WeeklyContribution");
        AddInt("TotalContribution");
        AddInt("DonationCount"); // times donated today?
        AddLong("LastContributeTime?");
        count2 = AddInt("count");
        for (j = 0; j < count2; j++) {
            AddInt("Unknown");
            AddInt("Unknown");
        }
        AddBool("CanCheckIn?");
    } else {
        AddUnicodeString("UnknownStr+114");
        AddInt("Unknown+116");
        AddInt("Unknown+120");
        AddShort("Unknown+124");
        AddUnicodeString("UnknownStr+126");
    }
    EndNode(false);
}

function DecodeGuildMemberPlayer() {
    StartNode("PlayerUIEntry");
    AddLong("AccountId");
    AddLong("CharacterId");
    AddUnicodeString("MemberName");
    AddByte("Gender"); // 1
    AddInt("JobCode");
    AddInt("JobId");
    AddShort("Level");
    AddInt("GearScore");
    AddInt("MapId");
    AddShort("Unknown+151"); // 0
    AddUnicodeString("MemberProfileUrl");
    AddInt("PlotMapId");
    AddInt("PlotId"); // 41?
    AddInt("Unknown+163");
    AddLong("PlotExpiration"); // By default, but can change...
    for (i = 0; i < 3; i++) {
        AddInt("Trophy");
    }
    EndNode(false);
}

function DecodeGuildJoinRequest() { // CGuildJoinRequestForGuild
    StartNode("GuildJoinRequest");
    AddLong("Unknown");
    AddLong("Unknown");
    AddLong("Unknown");
    AddLong("Unknown");
    AddUnicodeString("UnknownStr");
    AddUnicodeString("UnknownStr");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddLong("Unknown");
    EndNode(true);
}

function DecodeGuildJoinRequestForChar() { // CGuildJoinRequestForChar
    StartNode("GuildJoinRequestForChar");
    AddLong("ApplicationId");
    AddLong("GuildId"); // 2740883628096919654
    AddUnicodeString("GuildName");
    AddInt("GuildFocus");
    AddUnicodeString("UnknownStr");
    for (i = 0; i < 3; i++) {
        AddInt("TotalTrophy");
    }
    AddInt("Members");
    AddInt("MaxMembers");
    AddUnicodeString("UnknownStr");
    AddLong("ApplicantAccountId"); // 2754957392241780790
    AddLong("ApplicantCharacterId"); // 2755521558353024091
    AddLong("Timestamp");
    EndNode(true);
}

function DecodeSearchGuildJoin() { // CSearchGuildJoin
    StartNode("SearchGuildJoin");
    AddLong("GuildUid"); // 2740883628096919654
    AddUnicodeString("GuildName");
    AddUnicodeString("UnknownStr");
    for (i = 0; i < 3; i++) {
        AddInt("TotalTrophy");
    }
    AddInt("Members");
    AddInt("MaxMembers");
    AddInt("GuildFocusFlags");
    AddLong("LeaderAccountId"); // 2757912858338010347
    AddLong("LeaderCharacterId"); // 2758194333369633524
    AddUnicodeString("LeaderName"); // Sonic44885
    EndNode(true);
}

function DecodeGuildPVPHistoryData() {
    StartNode("GuildPVPHistoryData");
    AddInt("Unknown");
    AddInt("Unknown");
    AddByte("Unknown");
    AddLong("Unknown");
    AddLong("Unknown");
    AddUnicodeString("UnknownStr");
    AddUnicodeString("UnknownStr");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    for (i = 0; i < 5; i++) {
        StartNode("Entry " + i);
        AddUnicodeString("UnknownStr");
        AddUnicodeString("UnknownStr");
        AddByte("Unknown");
        EndNode(true);
    }
    AddLong("Unknown");
    AddLong("Unknown");
    EndNode(false);
}

function DecodeGuildPVPSeasonHistoryData() {
    StartNode("GuildPVPSeasonHistoryData");
    AddInt("Unknown");
    AddLong("Unknown");
    AddLong("Unknown");
    AddUnicodeString("UnknownStr");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddUnicodeString("UnknownStr");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    AddInt("Unknown");
    EndNode(false);
}

function DecodeGuildBankEntry() {
    StartNode("UnknownEntry");
    AddInt("ItemId");
    AddShort("Rarity");
    AddInt("Amount");
    AddBool("Unknown");
    AddBool("Unknown");
    AddBool("Unknown");
    AddBool("Unknown");
    EndNode(false);
}