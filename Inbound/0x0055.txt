using (ScriptAPI) {
    f = AddByte("function");

    switch ((int)f) {
        case 0: // load mail
            count = AddInt("count");
            for (i = 0; i < count; i++) {
                StartNode("MailEntry " + i);
                n = AddByte("UnknownNum"); // 102
                AddLong("MailUid"); // 59030013
                AddLong("SenderCharacterId"); // SomeUid
                // <ms2><v key="s_blackmarket_mail_to_sender" /></ms2>
                AddUnicodeString("SenderName");
                // <ms2><v key="s_blackmarket_mail_to_buyer_title" /></ms2>
                AddUnicodeString("MailTitle");
                // <ms2><v key="s_blackmarket_mail_to_buyer_content" /></ms2>
                AddUnicodeString("MailContent");
                // <ms2><v item="30000235" ></v></ms2>
                AddUnicodeString("MetadataKey");
                // Purchase 10 for 60 total, 6 each
                // <ms2><v item="30000235" ></v><v str="10" ></v><v money="60" ></v><v money="6" ></v></ms2>
                AddUnicodeString("MetadataValue");
                if (n == 200) { // CMailAdItem
                    adCount = AddByte("AdCount");
                    for (j = 0; j < adCount; j++) {
                        AddInt("Unknown");
                        AddInt("Unknown");
                        AddInt("Unknown");
                        AddInt("Unknown");
                        AddLong("Unknown");
                        AddLong("Unknown");
                        AddLong("Unknown");
                    }
                    AddUnicodeString("UnknownStr");
                    AddLong("Unknown");
                    AddByte("Unknown");
                } else { // CMailAttachItem
                    itemCount = AddByte("ItemCount");
                    for (j = 0; j < itemCount; j++) {
                        StartNode("AttachedItem " + j);
                        id = AddInt("ItemId");
                        AddLong("ItemUid");
                        AddByte("Unknown");
                        AddInt("Rarity");
                        AddInt("Amount");
                        AddLong("Unknown");
                        AddInt("Unknown");
                        AddLong("Unknown");
                        DecodeItem(id);
                        EndNode(false);
                    }
                }
                AddLong("Unknown");
                AddLong("Unknown");
                AddLong("Unknown");
                AddLong("Unknown");
                AddLong("Unknown");
                AddLong("Unknown");
                count2 = AddByte("Count");
                for (j = 0; j < count2; j++) {
                    AddByte("Unknown");
                    AddByte("Unknown");
                    AddLong("Unknown");
                    AddLong("Unknown");
                }
                AddLong("ViewedTime");
                AddLong("ExpiryTime");
                AddLong("SentTime");
                AddUnicodeString("UnknownStr");
                EndNode(false);
            }
        case 1: // send custom mail confirm
            AddLong("MailUid");
        case 2: // mark mail viewed
            AddLong("MailUid");
            AddLong("ViewedTime"); // Now
        case 3: // error
            AddLong("Unknown");
        case 10: // collecting mail #1
            AddLong("MailUid");
            AddByte("Unknown"); // 1
            AddByte("Unknown"); // 0
            AddLong("CollectTime");
        case 11: // collecting mail #2
            AddLong("MailUid");
            AddLong("ViewedTime");
        case 12:
            AddLong("Unknown");
            AddLong("Unknown");
        case 13: // delete mail
            AddLong("MailUid");
        case 14: // receive mail
            AddInt("UnreadMailCount");
            AddBool("Unknown"); // 1
            AddInt("Unknown");
        case 15:
            // none
        case 16: // start list
            // none
        case 17: // end list
            // none
        case 20: // switch (error)
            AddByte("Unknown"); // used in default case
            AddByte("ErrorCode");
        case 22:
            AddUnicodeString("UnknownStr");
            AddByte("Unknown");
            AddInt("Unknown");
            AddByte("Unknown");
            AddInt("Unknown");
            AddString("UnknownStrA");
            AddUnicodeString("UnknownStr");
    }
}