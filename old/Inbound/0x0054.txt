using (ScriptAPI) {
    f = AddByte("function");

    switch ((int)f) {
        case 0:
            AddByte("Type");
            AddUnicodeString("name");
        case 2: // joined party #1
            DecodePlayer();
            DecodeUnknownInfo();
        case 3: // left party (BROADCAST)
            AddLong("CharacterId");
            AddBool("Unknown");
        case 4: // kicked from party
            AddLong("CharacterId");
        case 5:
            DecodePlayer();
        case 6:
            AddLong("Unknown");
        case 7: // left party 2 (OTHERS)
            // None
        case 8: // become leader
            AddLong("CharacterId");
        case 9: // load party
            AddBool("offline");
            AddInt("partyId");
            AddLong("LeaderUid");
            count = AddByte("count");
            for (i = 0; i < count; i++) {
                StartNode("Member " + i);
                AddBool("Unknown");
                DecodePlayer();
                DecodeUnknownInfo();
                EndNode(false);
            }
            AddBool("Unknown");
            AddInt("DungeonId?");
            AddBool("Unknown");
            b = AddBool("IsPartyListed");
            if (b) {
                DecodeMatchPartyRecruit();
            }
        case 11: // party request
            AddUnicodeString("name");
            AddInt("partyId");
        case 12:
            AddLong("CharacterId");
            DecodePlayer();
            DecodeUnknownInfo();
        case 13: // same 12 (updating party player)
            AddLong("CharacterId");
            DecodePlayer();
            DecodeUnknownInfo();
        case 14:
            AddLong("CharacterId");
            DecodeUnknownInfo();
        case 15:
            AddLong("Unknown");
            AddInt("Unknown");
        case 18:
            AddLong("Unknown");
            AddByte("Unknown");
        case 19: // joined party #3
            AddLong("CharacterId");
            AddLong("AccountId");
            AddInt("Hp");
            AddInt("Hp");
            AddShort("Unknown");
        case 20: // notice
            AddUnicodeString("str_const"); // s_party_vote_expired|s_field_enteracne_party_notify_reset_dungeon|s_party_vote_rejected_kick_user
            AddUnicodeString("str_const"); // Field_Enterance_Reset_Dungeon
            AddUnicodeString("Unknown");
        case 21:
            b = AddBool("Unknown");
            AddInt("Unknown");
            if (b) {
                AddInt("Unknown");
                count = AddInt("count");
                for (i = 0; i < count; i++) {
                    AddUnicodeString("UnknownStr");
                }
            } else {
                AddUnicodeString("UnknownStr");
            }
            AddUnicodeString("UnknownStr");
        case 25: // dungeon reset
            AddBool("startedDungeon");
            AddInt("DungeonId?");
        case 26: // party finder
            // true = listed, false = cancel listing
            b = AddBool("IsListed");
            if (b) {
                DecodeMatchPartyRecruit();
            }
        case 30: // search party/search party cancel
            // 1->1, 2->8, 3->11, 4->5, default->0 (sub_437040)
            AddByte("Type");
            b = AddBool("StartSearch"); // false = cancel
            AddBool("Unknown"); // must be true
            AddByte("Unknown");
        case 31:
            AddLong("Unknown");
        case 35:
            AddLong("Unknown");
        case 37:
            AddLong("Unknown");
            AddUnicodeString("UnknownStr");
        case 40:
            // This value is used as (x / 1000 + 1)
            AddInt("Unknown");
        case 44: // IGN wants to join your party
            AddUnicodeString("name");
        case 47: // start ready check
            AddBool("Unknown"); // vote kick = 1
            AddInt("ReadyCheckConst(34)"); // 36 = vote kick
            AddLong("timestamp now");
            count = AddInt("PartyCount");
            for (i = 0; i < count; i++) {
                AddLong("CharacterId " + i);
            }
            count = AddInt("ReadyCount");
            for (i = 0; i < count; i++) {
                AddLong("CharacterId " + i);
            }
            count = AddInt("NotReadyCount");
            for (i = 0; i < count; i++) {
                AddLong("CharacterId " + i);
            }
        case 48: // not ready
            AddLong("CharacterId");
            AddBool("IsReady");
        case 49: // ready check expired/completed
            // none
        case 54: // search party/search party cancel
            b = AddBool("StartSearch"); // false = cancel
            AddBool("Unknown"); // must be true
    }
}

function sub_5B9350() {
    using (ScriptAPI) {
        AddLong("Unknown");
        AddInt("Unknown");
        AddInt("Unknown");
        AddInt("Unknown");
        AddUnicodeString("UnknownStr");
        AddByte("Unknown");
        AddInt("Unknown");
        AddInt("Unknown");
        AddLong("Unknown");
        AddUnicodeString("UnknownStr");
        AddLong("Unknown");
    }
}

function DecodeUnknownInfo() {
    count = AddInt("Count");
    for (j = 0; j < count; j++) {
        StartNode("Entry " + j);
        AddInt("Unknown");
        AddByte("Unknown");
        EndNode(false);
    }
}

function DecodeMatchPartyRecruit() {
    using (ScriptAPI) {
        StartNode("PartyListing");
        AddLong("PartyId");
        AddInt("SomeId"); // increments somewhat
        AddInt("Unknown");
        AddInt("Unknown");
        AddUnicodeString("PartyName");
        AddBool("IsPublic");
        AddInt("MemberCount");
        AddInt("MaxMembers");
        AddLong("LeaderAccountId");
        AddLong("LeaderCharacterId");
        AddUnicodeString("LeaderName");
        AddLong("CreationTime");
        EndNode(true);
    }
}